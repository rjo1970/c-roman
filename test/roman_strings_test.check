#include <string.h>
#include <stdio.h>
#include "../lib_roman.c"

#test roman_numbers_can_be_capitalized
  char *lowercased = "mcmlxxxiv";
  char *result = uppercased_roman(lowercased);
  fail_unless(strcmp(result, "MCMLXXXIV") == 0);
  free(result);

#test can_replace_substring_starting_at_end
  char *haystack = "MIV";
  char *needle = proper_translation[0];
  char *needle_replacement = simple_translation[0];
  char *result;
  result = replace_substring(haystack, needle, needle_replacement);
  fail_unless(strcmp(result, "MIIII") == 0);
  free(result);

#test can_replace_substring_starting_at_beginning
  char *haystack = "CDI";
  char *needle = "CD";
  char *needle_replacement = "CCCC";
  char *result;
  result = replace_substring(haystack, needle, needle_replacement);
  fail_unless(strcmp(result, "CCCCI") == 0);
  free(result);

#test can_replace_substring_starting_in_middle
  char *haystack = "MCDI";
  char *needle = "CD";
  char *needle_replacement = "CCCC";
  char *result;
  result = replace_substring(haystack, needle, needle_replacement);
  fail_unless(strcmp(result, "MCCCCI") == 0);
  free(result);

#test gracefully_returns_same_value_if_no_replaced_string
  char *haystack = "L";
  char *needle = "IV";
  char *needle_replacement="IIII";
  char *result;
  result = replace_substring(haystack, needle, needle_replacement);
  fail_unless(strcmp(result, "L") == 0);
  free(result);


#test can_expand_roman_iv
  char *result = simplify_roman("IV");
  fail_unless(strcmp(result, "IIII") == 0);
  free(result);

#test can_expand_roman_xl
  char *result = simplify_roman("XL");
  fail_unless(strcmp(result, "XXXX") == 0);
  free(result);

#test can_expand_roman_xc
  char *result = simplify_roman("XC");
  fail_unless(strcmp(result, "LXXXX") == 0);
  free(result);

#test can_expand_roman_cd
  char *result = simplify_roman("CD");
  fail_unless(strcmp(result, "CCCC") == 0);
  free(result);

#test can_expand_roman_cm
  char *result = simplify_roman("CM");
  fail_unless(strcmp(result, "DCCCC") == 0);
  free(result);

#test can_expand_mcmxciv
  char *result = simplify_roman("MCMXCIV");
  fail_unless(strcmp(result, "MDCCCCLXXXXIIII") == 0);
  free(result);

#test can_expand_mcmlxxxiv
  char *result = simplify_roman("MCMLXXXIV");
  fail_unless(strcmp(result, "MDCCCCLXXXIIII") == 0);
  free(result);

#test can_convert_to_integer
  int result = roman_to_integer("MCMLXXXIV");
  fail_unless(result == 1984);

#test can_compress_mdcccclxxxiiii
  char *result = compress_roman("MDCCCCLXXXIIII");
  fail_unless(strcmp(result, "MCMLXXXIV") == 0);
  free(result);
